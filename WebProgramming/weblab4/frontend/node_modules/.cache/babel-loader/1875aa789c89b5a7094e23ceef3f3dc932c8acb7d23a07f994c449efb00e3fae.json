{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DmitryCopyright\\\\Desktop\\\\web-lab4\\\\frontend\\\\src\\\\components\\\\IndexContent\\\\AuthSection\\\\AuthForm\\\\AuthForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport CSSModules from 'react-css-modules';\nimport { useFormik } from 'formik';\nimport styles from './AuthForm.module.css';\nimport ErrorMessage from './ErrorMessage/ErrorMessage';\nimport ControlButton from 'components/common/ControlButton/ControlButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validate = values => {\n  const errors = {};\n  if (!values.username && !values.password) {\n    errors.errorMessage = 'Введите данные для авторизации в поля ниже.';\n  } else if (!values.username) {\n    errors.errorMessage = 'Имя пользователя не может быть пустым.';\n  } else if (!values.password) {\n    errors.errorMessage = 'Пароль не может быть пустым.';\n  }\n  return errors;\n};\nconst AuthForm = props => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      newAccount: false\n    },\n    validate,\n    onSubmit: values => {\n      if (values.newAccount) {\n        props.register(values.username, values.password);\n      } else {\n        props.login(values.username, values.password);\n      }\n    },\n    validateOnChange: false,\n    validateOnBlur: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    styleName: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: formik.errors.errorMessage ? formik.errors.errorMessage : props.serverErrorMessage ? props.serverErrorMessage : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        styleName: \"text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          styleName: \"text-field__label\",\n          htmlFor: \"username\",\n          children: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          name: \"username\",\n          value: formik.values.username,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        styleName: \"text-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          styleName: \"text-field__label\",\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          name: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        text: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        styleName: \"register-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"register-check\",\n          type: \"checkbox\",\n          name: \"newAccount\",\n          checked: formik.values.newAccount,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          styleName: \"register-label\",\n          htmlFor: \"register-check\",\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = AuthForm;\nexport default _c2 = CSSModules(AuthForm, styles, {\n  allowMultiple: true,\n  handleNotFoundStyleName: 'ignore'\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","CSSModules","useFormik","styles","ErrorMessage","ControlButton","validate","values","errors","username","password","errorMessage","AuthForm","props","formik","initialValues","newAccount","onSubmit","register","login","validateOnChange","validateOnBlur","serverErrorMessage","handleSubmit","handleChange","allowMultiple","handleNotFoundStyleName"],"sources":["C:/Users/DmitryCopyright/Desktop/web-lab4/frontend/src/components/IndexContent/AuthSection/AuthForm/AuthForm.jsx"],"sourcesContent":["import React from 'react';\nimport CSSModules from 'react-css-modules';\nimport { useFormik } from 'formik';\nimport styles from './AuthForm.module.css';\nimport ErrorMessage from './ErrorMessage/ErrorMessage';\nimport ControlButton from 'components/common/ControlButton/ControlButton';\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.username && !values.password) {\n    errors.errorMessage = 'Введите данные для авторизации в поля ниже.';\n  } else if (!values.username) {\n    errors.errorMessage = 'Имя пользователя не может быть пустым.';\n  } else if (!values.password) {\n    errors.errorMessage = 'Пароль не может быть пустым.';\n  }\n\n  return errors;\n};\n\nconst AuthForm = (props) => {\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: '',\n      newAccount: false\n    },\n    validate,\n    onSubmit: values => {\n      if (values.newAccount) {\n        props.register(values.username, values.password);\n      } else {\n        props.login(values.username, values.password);\n      }\n    },\n    validateOnChange: false,\n    validateOnBlur: false\n  });\n\n  return (\n    <div styleName=\"form-container\">\n      <ErrorMessage message={formik.errors.errorMessage\n        ? formik.errors.errorMessage\n        : props.serverErrorMessage\n          ? props.serverErrorMessage\n          : \"\"} />\n      <form onSubmit={formik.handleSubmit}>\n        <p styleName=\"text-field\">\n          <label styleName=\"text-field__label\" htmlFor=\"username\">\n            Имя пользователя   \n          </label>\n          <input id=\"username\" type=\"text\" name=\"username\"\n            value={formik.values.username} onChange={formik.handleChange} />\n        </p>\n        <br />\n\n        <p styleName=\"text-field\">\n          <label styleName=\"text-field__label\" htmlFor=\"password\">\n            Пароль\n          </label>\n          <input id=\"password\" type=\"password\" name=\"password\"\n            value={formik.values.password} onChange={formik.handleChange} />\n        </p>\n        <br />\n\n        <ControlButton text=\"Войти\" />\n        <br />\n\n        <div styleName=\"register-field\">\n          <input id=\"register-check\" type=\"checkbox\" name=\"newAccount\"\n            checked={formik.values.newAccount} onChange={formik.handleChange} />\n          <label styleName=\"register-label\" htmlFor=\"register-check\">\n            Новый аккаунт?\n          </label>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default CSSModules(AuthForm, styles, { allowMultiple: true, handleNotFoundStyleName: 'ignore' });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}